#include <stdio.h>
int what_day(int,int ,int);
char latedate(char []);//late date
int datest(char [], int , int);// test then string is date
int m,day,y;
char sprd[100];//spring date

main()
{
	FILE *f;
	FILE *fin;
	int l,min=9999,i,ld=0,lm=0,ly=0,W;
	char sod[9];//string of date
	char latd[9];//last date
	printf("wtite the dates in file 'data1.txt 'like this: day.month.year -without spase and through Enter.\n max date 31 12 9999\n After filling file.txt Press 'Enter'");
	getchar();
	printf("Now check data2.txt");
	f = fopen("data1.txt", "rt");
	fin = fopen("data2.txt","w+");
	while(fscanf(f,"%s",sod)!=EOF)
	{
		if (datest(sod,0,10)==1)
		{
		min=(y < min) ? y : min;
		if(m>=3 && m<=5)
			{
				for (sprd[l-1]='\n', i=0; i < 10; sprd[l]=sod[i],i++,l++);
				l++;
			}
		if(y > ly)
			{
				ld=day;
				lm=m;
				ly=y;
			}
			else if(y == ly && lm < m)
				{
					ld=day;
					lm=m;
					ly=y;
				}
				else if(lm == m && ld<day)
				{
					ld=day;
					lm=m;
					ly=y;
				}
			switch(what_day(day,m,y))
			{
				case 1 : fprintf(fin,"\n %d.%d.%d-monday\n",day,m,y);break; 
				case 2 : fprintf(fin,"\n %d.%d.%d-Tuesday\n",day,m,y);break;
				case 3 : fprintf(fin,"\n %d.%d.%d-Wednesday\n",day,m,y);break;
				case 4 : fprintf(fin,"\n %d.%d.%d-Thursday\n",day,m,y);break;
				case 5 : fprintf(fin,"\n %d.%d.%d-Friday\n",day,m,y);break;
				case 6 : fprintf(fin,"\n %d.%d.%d-Saturday\n",day,m,y);break;
				case 0 : fprintf(fin,"\n %d.%d.%d-Sunday\n",day,m,y);break;
			}
		}
		else if(datest(sod,0,10)==0) 
			printf("\n%d.%d.%d-incrorrect date\n",day,m,y);
	}
	fprintf(fin,"\n minyear=%d\n all spring dates:\n %s\n",min,sprd);
	fprintf (fin,"the lates date:\n %d.%d.%d",ld, lm, ly);
	fclose(f);
	fclose(fin);
	return 0;
}
int datest(char d[], int begin, int end)
{
	int F=0;
	day = (d[begin]-'0') * 10 + (d[begin+1]-'0');
	m = (d[begin+3]-'0') * 10 + (d[begin+4]-'0');
	y = (d[end-1]-'0') + (d[end-2]-'0') * 10 + (d[end-3]-'0') * 100 + (d[end-4]-'0')*1000;
	F = (day >= 1 && day <= 31 && (m==1 || m==3 || m==5 || m==7 || m==8 || m==10 || m==12)) ? 1 : F;
	F = (day >=1 && day <= 30 && (m==4 || m==6 || m==9 || m==11)) ? 1 : F;
	F = ((day >= 1 && day <= 29 && y%4==0 && m==2) ||(day >= 1 && day <= 28 && y%4!=0 && m==2)) ? 1 : F;
	return F;
}
int what_day(int da,int month,int year)
{
	int a;
     a = (14 - month) / 12;
     year = year - a;
     month = month + 12 * a - 2;
    return (da + year + year / 4 - year / 100 + year / 400 + (31 * month) / 12) % 7;
}
